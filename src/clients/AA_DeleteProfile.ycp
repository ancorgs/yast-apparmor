/* ------------------------------------------------------------------
*
*    Copyright (C) 2002-2006 Novell/SUSE
*
*    This program is free software; you can redistribute it and/or
*    modify it under the terms of version 2 of the GNU General Public
*    License published by the Free Software Foundation.
*
  ------------------------------------------------------------------*/
{
import "Wizard";
import "Label";
import "Popup";
import "Sequencer";
include "apparmor/apparmor_packages.ycp";
include "apparmor/apparmor_profile_check.ycp";
include "apparmor/profile_dialogs.ycp";
textdomain  "yast2-apparmor";

// Globalz

define any DeleteProfileConfirmation() {
  string profilename = Settings["CURRENT_PROFILE"]:"";
  if (Popup::YesNoHeadline( _("Delete profile confirmation"), 
		_("Are you sure you want to delete the profile ") + profilename + 
		_(" ?\nAfter this operation the AppArmor module will reload the profile set.") ) )  {
    y2milestone("Deleted " + profilename );
    boolean result = SCR::Write(.apparmor_profiles.delete, profilename);
    any result2 = SCR::Write(.apparmor_profiles.reload, "-");
  }
  return `finish;
}

define any MainSequence() ``{

//
// Read the profiles from the SCR agent
   map profiles = (map) SCR::Read (.apparmor_profiles, "all");

   map aliases = $[
        "chooseprofile" : ``(SelectProfileForm(profiles, _("Please make a 
		selection from the listed profiles and press Next to delete the profile."),
		_("Delete Profile - Choose profile to delete"), "apparmor/delete_profile")),
        "deleteprofile"   : ``(DeleteProfileConfirmation()),
   ];

   map sequence = $[
        "ws_start" : "chooseprofile",
        "chooseprofile" : $[
            `abort : `abort,
            `next : "deleteprofile",
            `finish : `next,
        ],
    ];

    Wizard::CreateDialog();
    Wizard::SetTitleIcon("apparmor_delete_profile");
    any ret = Sequencer::Run(aliases, sequence);
    Wizard::CloseDialog();
    Settings = remove( Settings, "CURRENT_PROFILE");
    Settings = remove( Settings, "PROFILE_MAP");
    return ret;
}



//
// YEAH BABY RUN BABY RUN
//
any ret = nil;

// no command line support #269891
if (size(WFM::Args()) > 0 )
{
    import "CommandLine";
    CommandLine::Init($[], WFM::Args());
    return ret;
}

if (!installAppArmorPackages()) {
  return ret;
}

if (!checkProfileSyntax()) {
  return true;
}

ret = MainSequence();
return ret;
}

